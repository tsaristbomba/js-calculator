{"version":3,"sources":["Calc.js","index.js","App.js"],"names":["Calc","useState","result","setResult","num1","setNum1","num2","setNum2","sum1","setSum1","sum2","setSum2","operator","setOp","actualValue","setValue","mDisplay","setDisplay","fullDisplay","setFull","handleNum","e","num","target","value","includes","prev","console","log","length","useEffect","reduce","accumulator","currentVal","splitted","toString","split","join","id","disabled","className","onClick","Number","String","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c06f7860.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\n\r\n// problems //\r\n//second+ calcs dont display numbers unless equals is pressed\r\n\r\nexport default function Calc() {\r\n    const [result, setResult] = useState(\"\")\r\n    const [num1, setNum1] = useState([])\r\n    const [num2, setNum2] = useState([])\r\n    const [sum1, setSum1] = useState(0)\r\n    const [sum2, setSum2] = useState(0)\r\n    const [operator, setOp] = useState(\"\")\r\n    const [actualValue, setValue] = useState(\"0\")\r\n    const [mDisplay, setDisplay] = useState([])\r\n    const [fullDisplay, setFull] = useState(\"\")\r\n\r\n    //console.log(num2)\r\n    console.log(\"mini \"+ num1.length)\r\n    console.log(\"disp \"+ fullDisplay.length)\r\n\r\n    //handle number and operators\r\n    function handleNum(e) {\r\n        const num = e.target.value\r\n        if(operator === \"\") {\r\n            if(num === \".\") {   \r\n                if(!(num1.includes(\".\"))){\r\n                    setNum1(prev => [...prev, num])\r\n                }\r\n            } else {\r\n                setNum1(prev => [...prev, num])\r\n            }\r\n        } else if (num1 !== 0) {\r\n            if(num === \".\") {\r\n                if(!(num2.includes(\".\"))){\r\n                    setNum2(prev => [...prev, num])\r\n                }\r\n            } else {\r\n                setNum2(prev => [...prev, num])\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    //handle equals button\r\n    function handleCalc() {\r\n        if(operator === \"+\") {\r\n            setSum1(Number(sum1) + Number(sum2))\r\n            setNum1([Number(sum1) + Number(sum2)])\r\n            setResult(Number(sum1) + Number(sum2))\r\n            setOp(\"\")\r\n            setNum2([])\r\n            setDisplay(prev => mDisplay.length > 0 ?\r\n                [...prev, String(operator) + String(sum2)] :\r\n                [...prev, String(sum1) + String(operator) + String(sum2)])\r\n        } else if(operator === \"-\") {\r\n            setSum1(Number(sum1) - Number(sum2))\r\n            setNum1([Number(sum1) - Number(sum2)])\r\n            setResult(Number(sum1) - Number(sum2))\r\n            setOp(\"\")\r\n            setNum2([])\r\n            setDisplay(prev => mDisplay.length > 0 ?\r\n                [...prev, String(operator) + String(sum2)] :\r\n                [...prev, String(sum1) + String(operator) + String(sum2)])\r\n        } else if(operator === \"x\") {\r\n            setSum1(Number(sum1) * Number(sum2))\r\n            setNum1([Number(sum1) * Number(sum2)])\r\n            setResult(Number(sum1) * Number(sum2))\r\n            setOp(\"\")\r\n            setNum2([])\r\n            setDisplay(prev => mDisplay.length > 0 ?\r\n                [...prev, String(operator) + String(sum2)] :\r\n                [...prev, String(sum1) + String(operator) + String(sum2)])\r\n        } else if(operator === \"/\") {\r\n            setSum1(Number(sum1) / Number(sum2))\r\n            setNum1([Number(sum1) / Number(sum2)])\r\n            setResult(Number(sum1) / Number(sum2))\r\n            setOp(\"\")\r\n            setNum2([])\r\n            setDisplay(prev => mDisplay.length > 0 ?\r\n                [...prev, String(operator) + String(sum2)] :\r\n                [...prev, String(sum1) + String(operator) + String(sum2)])\r\n        }\r\n    }\r\n\r\n    //handle AC button\r\n    function handleAc() {\r\n        setSum1(0)\r\n        setValue(\"0\")\r\n        setSum2(0)\r\n        setOp(\"\")\r\n        setNum1([])\r\n        setNum2([])\r\n        setResult(\"\")\r\n        setDisplay([])\r\n    }\r\n\r\n    //handle the live display\r\n     useEffect(() => {\r\n        num1.length > 0 && setSum1(num1.reduce((accumulator, currentVal) =>  accumulator + currentVal))\r\n        num2.length > 0 && setSum2(num2.reduce((accumulator, currentVal) =>  accumulator + currentVal))\r\n        num1.length > 0 && setValue(num1.reduce((accumulator, currentVal) =>  accumulator + currentVal))\r\n        num2.length > 0 && setValue(num2.reduce((accumulator, currentVal) =>  accumulator + currentVal))\r\n        result !== \"\" && setValue(result)\r\n    }, [num1, num2, result])\r\n\r\n    //handle the commas in mini-display\r\n    useEffect(() => {\r\n        let splitted = mDisplay.toString().split(\",\").join(\"\")\r\n        setFull(splitted)\r\n    }, [mDisplay])\r\n\r\n\r\n    return (\r\n        <div id=\"calc\">\r\n            <input id=\"mini-display\" value={fullDisplay.length >= 37 ? \"Number limit reached\" : fullDisplay} disabled />\r\n            <input id=\"display\" value={num1.length >= 20 || num2.length >= 20 ? \"Number limit reached\" : actualValue} disabled />\r\n            <button className=\"ac\" onClick={handleAc}>AC</button>\r\n            <button className=\"operators\" onClick={() => sum1 > 0 && setOp(\"/\")} value=\"/\">/</button>\r\n            <button className=\"operators\" onClick={() => sum1 > 0 && setOp(\"x\")} value=\"*\">x</button>\r\n            <button className=\"numbers\" onClick={handleNum} value=\"7\">7</button>\r\n            <button className=\"numbers\" onClick={handleNum} value=\"8\">8</button>\r\n            <button className=\"numbers\" onClick={handleNum} value=\"9\">9</button>\r\n            <button className=\"operators\" onClick={() => sum1 > 0 && setOp(\"-\")} value=\"-\">-</button>\r\n            <button className=\"numbers\" onClick={handleNum} value=\"4\">4</button>\r\n            <button className=\"numbers\" onClick={handleNum} value=\"5\">5</button>\r\n            <button className=\"numbers\" onClick={handleNum} value=\"6\">6</button>\r\n            <button className=\"operators\" onClick={() => sum1 > 0 && setOp(\"+\")} value=\"+\">+</button>\r\n            <button className=\"numbers1\" onClick={handleNum} value=\"1\">1</button>\r\n            <button className=\"numbers1\" onClick={handleNum} value=\"2\">2</button>\r\n            <button className=\"numbers1\" onClick={handleNum} value=\"3\">3</button>\r\n            <button className=\"dot\" onClick={handleNum} value=\".\">.</button>\r\n            <button className=\"zero\" onClick={handleNum} value=\"0\">0</button>\r\n            <button className=\"equals\" onClick={handleCalc}value=\"=\">=</button>\r\n            \r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./styles.css\"\r\n\r\nimport App from \"./App\"\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))","import React from \"react\"\r\n\r\nimport Calc from \"./Calc\"\r\n\r\n\r\nexport default function App() {\r\n    return (\r\n        <div>\r\n            <h1>JS Calculator</h1>\r\n            <Calc />\r\n        </div>\r\n    )\r\n}"],"sourceRoot":""}